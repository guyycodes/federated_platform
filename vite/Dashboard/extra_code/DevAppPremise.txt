Very Good, now With the same Theme in mind, please re-craft the LLM a self‑service Plugin Marketplace Dashboard using the dashboard based deplyment concept of the previous desing but with a focus where Your design must support development of the actual plugins using my auto generated template and:
1. Plugin Catalog & Curation  
   - A gated “Apply to Publish” workflow: plugins in “Pending” until manually approved.  
   - A curated list of Vetted Plugins vs. an open‑contribution alternate view.  
   - Badges or labels for “Enterprise‑Ready,” “White‑Label,” “Community Favorite.”  
   - Filtering / searching by category, developer, status.
2. Instant Deployment & Versioning  
   - “New Plugin” button opens a form:  
     • Name, Git repo URL (or upload), Description, Category tags  
     • Version selector / auto‑increment  
   - On submit, trigger your CI/CD pipeline (GitHub Actions) to build, upload to B2, register DNS & SSL via BunnyCDN API.  
   - Show a per‑plugin “Deployment Status” (🕐 Building → ✅ Live → ❌ Failed).  
   - Each deployment lives at its own subdomain: v2.my‑plugin.yourplatform.com, v3…
3. Sandbox Isolation & API Gateway  
   - Clearly isolate each plugin behind its subdomain.  
   - Display the endpoint URL and example API call.  
   - Show API‑gateway metrics (requests/sec, latency).
4. Developer Branding & Business Model  
   - Let developers customize a logo and display name per plugin.  
   - Show revenue‑share settings and tiers.  
   - Option for “White‑Label” toggle for enterprise customers.
5. Competitive Positioning Notes  
   - Emphasize how this differs from Hugging Face (no custom domains), OpenAI Plugin Store (centralized), LangChain Hub (code‑only).  
   - Position DNS rate‑limits as a scarcity feature: “Only X new plugins per week” creates exclusivity.
6. Admin & Rollback Controls  
   - Admin view to approve/reject submissions.  
   - Buttons to “Rollback to vN” or “Delete Deployment.”  
7. Technical Integration  
   - Pages & API routes:  
     /pages/index.tsx → PluginCatalogTable  
     /pages/plugins/[slug].tsx → PluginDetailPane (logs + metrics)  
     /pages/api/deploy.ts → dispatches GitHub Actions workflow_dispatch  
     /pages/api/approve.ts → updates plugin status  
     /utils/github.ts → GitHub API wrappers  
     /utils/bunny.ts  → BunnyCDN/DNS API wrappers  
   - Env vars: GITHUB_TOKEN, BUNNY_API_KEY, PULLZONE_ID, etc.
Generate complete code for pages, components and API routes—including imports, types, error handling and stylings—and inline comments explaining each major block. At the end, include brief setup instructions for .env.local, DNS delegation, and how to run the project.```
::contentReference[oaicite:0]{index=0}